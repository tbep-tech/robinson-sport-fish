---
title: "Interactive Data Map"
sidebar: false
---

Receiver array data were last downloaded December 2022. Our receivers have heard from all tagged fish, and most recently heard from 15 out of 26 tagged individuals. 11 fish have been detected by receivers placed outside of the preserve. 4 fish were last detected by receivers outside of the preserve. Click on a specific receiver in the map below to see the species the receiver has detected. Click each waterbody to show where tagged fish were initially caught and released.

```{r}
#| echo: false
#| warning: false
#| error: false
#| message: false

library(tidyverse)
library(sf)
library(mapview)
library(leafpop)
library(lubridate)
library(odbc)
library(DBI)
library(dbplyr)
library(ggimage)

#### Prep spatial data layers ####

# read in Tampa Bay Shoreline shapefile
TBshore <- st_read('shapefiles/Tampa_Bay_Shoreline.shp', quiet = T) %>%
  st_transform(4326)

# read in Robinson Preserve outline polygon from Manatee County
preservedat <- st_read('shapefiles/Parks_and_Preserves.shp', quiet = T) %>%
  filter(NAME == 'Robinson Preserve') %>%
  select(NAME, TOTADDRESS, ZIPCODE, PARK_TYPE, ACREAGE, MANAGEMENT, OWNER_NAME, geometry)
preservedat.shp <- preservedat %>%
  st_transform(4326)
  
# the county shapefile is in WGS 84 and is a multipolygon

# read in Robinson Preserve expansion project outline polygon
expansiondat <- st_read('shapefiles/RobPres_Expansion_Poly.shp', quiet = T) %>%
  select(Entity, Layer, DocName, DocType, geometry) %>%
  #need to transform from NAD83 to WGS 84
  st_transform(4326)

#read in FIM pond outlines
ponddat <- st_read('shapefiles/Robinson_Preserve.shp', quiet = T) %>%
  mutate(Pond = str_replace(str_sub(FolderPath, 24, 29),"_"," "),
         Type = case_when(Pond %in% c("Pond_6", "Pond_7") ~ "Natural",
                          TRUE ~ "Restored")) %>%

  #group by ponds and make them into polygon outlines
  group_by(Pond, Type) %>%
  summarise() %>%
  st_cast("POLYGON") %>%
  #for the outer polygon
  st_convex_hull()

#locations of water loggers installed during restoration monitoring (different grant than acoustics)
loggerdat <- read.csv("shapefiles/RobPres_WaterLogger_loc.csv", header = T, stringsAsFactors = F)
logger.shp <- loggerdat %>%
  filter(Logger.. != 31) %>%
  select(Logger.Type, Pond = Location, Notes, LAT_DD, LONG_DD) %>%
  #specify lat/long and the WGS coord system as 4326
  st_as_sf(coords = c('LONG_DD', 'LAT_DD'), crs = 4326)

#Locations of acoustic receivers
receiverdat <- read.csv("shapefiles/AcousticReceiver_loc_deployed.csv", header = T, stringsAsFactors = F)
receiver.shp <- receiverdat %>%
  mutate(Longitude_dd = -1*Longitude_dd) %>%
  #specify lat/long and the WGS coord system as 4326
  st_as_sf(coords = c('Longitude_dd', 'Latitude_dd'), crs = 4326)

#approximate location of Rob Preserve entry/exit points
openingdat <- read.csv("shapefiles/RobPres_IngressEgress_loc.csv", header = T, stringsAsFactors = F)
opening.shp <- openingdat %>%
  #specify lat/long and the WGS coord system as 4326
  st_as_sf(coords = c('LONG_DD', 'LAT_DD'), crs = 4326)

#### Prep data visualizations ####
water_dat <- data.frame(x = c(1,2), y = c(1,2))

load("../params.RData")
conn <- dbConnect(odbc::odbc(),
                  driver = driver,
                  server = server,
                  database = database,
                  uid = uid,
                  pwd = pwd)

tags <- left_join(tbl(conn, in_schema("dbo","tbl_TagDetails")),
                  tbl(conn, in_schema("dbo","tbl_Ref_TagNo")),
                  by = c("TagNo","TagType","TagCode")) %>%
        left_join(select(tbl(conn, in_schema("dbo","tbl_FieldBiology")),Reference,SpeciesRecID,TSNCode),
                  by = c("Reference","SpeciesRecID")) %>%
        left_join(select(tbl(conn, in_schema("dbo","tbl_Species")),TSN,Scientificname,CommonName),
                  by = c("TSNCode" = "TSN")) %>%
        filter(TagType == "A") %>%
        collect()

acoustic <- NULL
files    <- list.files("../Acoustic_Raw", full.names = TRUE)

for (i in files) {
  acoustic <- rbind(acoustic, read_csv(i))
}


tagged <- acoustic %>%
  mutate(TagCode = str_sub(Transmitter,start = -4L)) %>%
  left_join(tags, by = "TagCode") %>%
  filter(TagCode %in% unique(tags$TagCode)) %>%
  mutate(Receiver_Number = as.numeric(str_sub(Receiver,start = -6L)),
         date_time = as_date(`Date and Time (UTC)`),
         station = ifelse(Receiver_Number == '138109',"Palma Sola 2",`Station Name`),
         station = ifelse(Receiver_Number == '138101',"Palma Sola 1", station),
         
         location = ifelse(station %in% c("Mead Point 1", "Mead Point 2", "Mead Point 3", "Perico Bayou","Palma Sola 1", "Palma Sola 2"), "Outside","Inside")) %>%
  arrange(CommonName) %>%
  mutate(TagCode = factor(TagCode, levels = unique(TagCode)))

tagged_plot <- ggplot(tagged) +
  geom_point(aes(x = date_time, y = TagCode, color = CommonName, shape = location)) +
  scale_shape_manual(values = c(1,19),breaks = c("Outside","Inside")) +
  scale_color_manual(values = c("cadetblue4","coral3","darkgoldenrod1"), breaks = c("Tarpon","Red Drum", "Common Snook")) +
  labs(x = NULL, y = "Fish ID",color = NULL,shape = "Location") +
  theme(axis.text.y = element_blank(), axis.ticks.y = element_blank())
# tagged_plot

fish_images <- data.frame(species = c("Common Snook","Red Drum","Tarpon"),img = c("../FishImages/Snook.png","../FishImages/Red Drum.png","../FishImages/Tarpon.png"))


receivers_dat <- full_join(receiver.shp,tagged, by = c("Receiver_Number")) %>%
  group_by(Receiver_Number) %>%
  nest() %>%
  mutate(data = map(data, function(x) {
           x %>%
           group_by(CommonName) %>%
           summarize(n_fish = length(unique(TagCode)),
                     n_detect = length(unique(date_time)))
         }),
         plot = map(data, function(dat) if(all(is.na(dat$CommonName))) {
           ggplot() +
             geom_text(aes(0,0,label = "No Fish Detected")) +
             theme_void()
         } else {
           ggplot(dat) +
             geom_image(aes(x = 0, 
                            y = 1:nrow(dat), 
                            image = filter(fish_images, species %in% dat$CommonName)$img),
                        size = 0.5) +
             geom_text(aes(x = 0, 
                           y = 1:nrow(dat)-0.3, 
                           label = CommonName), 
                       size = 6) +
             geom_text(aes(x = 0, 
                           y = 1:nrow(dat)-.5, 
                           label = paste0(n_detect, " daily detections from ",n_fish, " fish")),
                       size = 6) +
             scale_y_continuous(limits = c(.25,nrow(dat)+0.25)) +
             scale_x_continuous(limits = c(-1,1)) +
             theme_void()
         }))





receiver_plots <- receivers_dat$plot

pond_tags <- tags %>%
  mutate(Pond = str_sub(Notes, start = 1L, end = 6L)) %>%
  select(Pond,CommonName) %>%
  full_join(ponddat) %>%
  group_by(Pond,CommonName) %>%
  summarize(Count = n()) %>%
  nest() %>%
  mutate(plot = map(data, function(dat) if(all(is.na(dat$CommonName))) {
           ggplot() +
             geom_text(aes(0,0,label = "No Fish Tagged")) +
             theme_void()
         } else {
           ggplot(dat) +
             geom_image(aes(x = 0, 
                            y = 1:nrow(dat), 
                            image = filter(fish_images, species %in% dat$CommonName)$img),
                        size = 0.5) +
             geom_text(aes(x = 0, 
                           y = 1:nrow(dat)-0.3, 
                           label = CommonName), 
                       size = 6) +
             geom_text(aes(x = 0, 
                           y = 1:nrow(dat)-.5, 
                           label = paste0(Count, " fish tagged")),
                       size = 6) +
             scale_y_continuous(limits = c(.25,nrow(dat)+0.25)) +
             scale_x_continuous(limits = c(-1,1)) +
             theme_void()
         }))
  

# receiver_plots <- ggplot() +
#   geom_text(aes(0,0,label = "Coming soon")) +
#   theme_void()

pond_charts <- pond_tags$plot


water_log <- ggplot() +
  geom_text(aes(0,0,label = "Coming soon")) +
  theme_void()
# receiver_log <- ggplot(receiver_dat, aes(x, y)) +
#   geom_line()

mapviewOptions(basemaps = c("Esri.WorldImagery", "OpenStreetMap"),
               legend.pos = "topright")
mapview(preservedat, 
        col.regions = "lightgreen", 
        alpha.regions = 0.2, 
        layer.name = "Robinson Preserve",
        popup = NULL,
        label = FALSE) +
  mapview(ponddat, 
          col.regions = "lightblue", 
          layer.name = "Waterbodies",
          label = ponddat$Pond,
          popup = popupGraph(pond_charts)) +
  mapview(opening.shp, 
          zcol = "Type", 
          col.regions = c("Red", "Black"),
          alpha.regions = 10, 
          cex = 5, 
          popup = NULL,
          label = FALSE,
          layer.name = "Potential Exit/Entry Points") +
  mapview(logger.shp, 
          col.regions = "blue", 
          cex = 4.5, 
          layer.name = "Water/Air Loggers", 
          popup = popupGraph(water_log)) +
  mapview(receiver.shp, 
          col.regions = "yellow", 
          cex = 8, 
          alpha.regions = 10, 
          layer.name = "Receiver Locations",
          label = receiver.shp$Area_Name,
          popup = popupGraph(receiver_plots))
```
